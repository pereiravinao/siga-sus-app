spring.application.name=api-gateway
server.port=8080

# Gateway Routes Configuration
spring.cloud.gateway.server.webflux.routes[0].id=auth-service
spring.cloud.gateway.server.webflux.routes[0].uri=http://localhost:8081
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.server.webflux.routes[0].filters[0]=TokenValidation

spring.cloud.gateway.server.webflux.routes[1].id=patient-record-service
spring.cloud.gateway.server.webflux.routes[1].uri=http://localhost:8082
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/patients/**
spring.cloud.gateway.server.webflux.routes[1].filters[0]=TokenValidation

spring.cloud.gateway.server.webflux.routes[2].id=triage-orchestrator-service
spring.cloud.gateway.server.webflux.routes[2].uri=http://localhost:8083
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/triage/**
spring.cloud.gateway.server.webflux.routes[2].filters[0]=TokenValidation

spring.cloud.gateway.server.webflux.routes[3].id=clinical-rule-engine-service
spring.cloud.gateway.server.webflux.routes[3].uri=http://localhost:8084
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/api/rules/**
spring.cloud.gateway.server.webflux.routes[3].filters[0]=TokenValidation

# CORS Configuration
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-origins=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations[/**].allowed-headers=*

# Actuator
management.endpoints.web.exposure.include=health,info,gateway
management.endpoint.health.show-details=always

# gRPC Client Configuration for Token Validation Service
grpc.client.token-validation.address=${GRPC_CLIENT_TOKEN_VALIDATION_HOST:static://127.0.0.1:9091}
grpc.client.token-validation.negotiation-type=plaintext