services:
  # Database Services
  postgres:
    image: postgres:latest
    container_name: siga-sus-postgres
    environment:
      POSTGRES_DB: siga-sus-app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - siga-sus-network

  redis:
    image: redis:7-alpine
    container_name: siga-sus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - siga-sus-network

  # Microservices
  api-gateway:
    build:
      context: ./apps/api-gateway
      dockerfile: Dockerfile
    container_name: siga-sus-api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - patient-record-service
      - triage-orchestrator-service
    networks:
      - siga-sus-network

  auth-service:
    build:
      context: ./apps/auth-service
      dockerfile: Dockerfile
    container_name: siga-sus-auth-service
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/siga-sus-app
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    ports:
      - "8081:8081"
      - "9091:9091"
    networks:
      - siga-sus-network

  patient-record-service:
    build:
      context: ./apps/patient-record-service
      dockerfile: Dockerfile
    container_name: siga-sus-patient-record-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    networks:
      - siga-sus-network

  triage-orchestrator-service:
    build:
      context: ./apps/triage-orchestrator-service
      dockerfile: Dockerfile
    container_name: siga-sus-triage-orchestrator-service
    ports:
      - "8083:8083"
      - "9090:9090"  # gRPC port
    depends_on:
      - redis

    networks:
      - siga-sus-network



networks:
  siga-sus-network:
    driver: bridge

volumes:
  postgres_data:
  mongo_data:
  redis_data:
